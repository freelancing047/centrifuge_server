<project name="Flex-Commons">
    <dirname property="Flex-Commons.basedir" file="${ant.file.Flex-Commons}" />

    <property file="${Flex-Commons.basedir}/build.properties" />


    <taskdef resource="flexTasks.tasks" classpath="${Flex-Commons.basedir}/../../tools/flexTasks.jar" />

    <property name="locale" value="en_US" />
<!--     <property name="FLEX_HOME" value="C:\Program Files\Adobe\Flex Builder 3\sdks\3.3.3" />
 -->    <property name="flex.frameworks" value="${FLEX_HOME}/frameworks" />
    <property name="flex.config" value="${flex.frameworks}/flex-config.xml" />

    <property name="project.source" location="src" />
    <property name="artifact" value="${output.name}-${output.version}.swc" />

    <fileset id="library.sources" dir="${basedir}/src">
        <include name="**/*.as" />
        <exclude name="generated/**/*.as" />
    </fileset>




    <uptodate property="needs-compile" targetfile="${artifact}">
        <srcfiles refid="library.sources" />
    </uptodate>


    <pathconvert property="library.classes" pathsep=" " dirsep="." refid="library.sources">
        <mapper>
            <chainedmapper>
                <globmapper from="*.as" to="*" />
                <!--
                -->
                <globmapper from="${project.source}\*" to="*" handledirsep="true" />
            </chainedmapper>
            <chainedmapper>
                <globmapper from="*.mxml" to="*" />
                <globmapper from="${project.source}\*" to="*" handledirsep="true" />
                <!--
                -->
            </chainedmapper>
        </mapper>
    </pathconvert>


    <target name="compile" unless="needs-compile">
        <compc output="${basedir}/${output.name}-${output.version}.swc" include-classes="${library.classes}">
            <source-path path-element="${basedir}/src" />
        </compc>
    </target>


    <target name="build" depends="compile">
        <copy todir="${Flex-Commons.basedir}/lib" file="${artifact}" />
    </target>

    <target name="clean">
        <echo>Remvoing ${artifact}</echo>
        <delete file="${artifact}" />
    </target>


</project>