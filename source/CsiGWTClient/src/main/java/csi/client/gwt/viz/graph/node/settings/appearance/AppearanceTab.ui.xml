<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder'
	xmlns:g="urn:import:com.google.gwt.user.client.ui" xmlns:gxt="urn:import:com.sencha.gxt.widget.core.client"
	xmlns:combo="urn:import:csi.client.gwt.widget.combo_boxes" xmlns:boot="urn:import:com.github.gwtbootstrap.client.ui"
	xmlns:base="urn:import:com.github.gwtbootstrap.client.ui.base"
	xmlns:form="urn:import:com.sencha.gxt.widget.core.client.form"
	xmlns:local="urn:import:csi.client.gwt.viz.graph.node.settings.appearance"
	xmlns:buttons="urn:import:csi.client.gwt.widget.buttons">
	<ui:style>
		.inline-block {
		display: inline-block;
		margin-right: 4px;
		}

		.colorButton {
		font-size: 18px;
		width: 15px;
		padding: 4px;
		}

		.appearance-container {
		padding: 0;
		padding-top: 10px;
		}

		.preview-label {
		cursor: default;
		}

		.scrollable {
		overflow-x: hidden;
		height: 390px;
		}

		.remove-margin{
		margin-left:0px;
		}

		.margin-top{
		margin-top:10px;
		}

		.border{
		border-style:solid;
		border: 1px;
		border-width: 1px;
		border-color:lightgray;
		}

		.preview{
		opacity: 1;
		height:
		50px;
		width: 50px;
		margin: 5px;
		padding: 4px;
		margin-top: 0px;
		margin-bottom: 0px;
		border:
		1px;
		border-style: solid;
		border-color:
		#a8a8a8;
		background-color:
		#efefef;
		}

		.gridtop{
		margin-top:53px;
		}

		.name{
		width:195px;
		}

		.icon-scale{

		width:20px;
		margin-top:52px;
		}

		.small-space-top{
		margin-top:5px;
		}

		.erase-label-margin{
		margin-bottom:0px !important;
		}

		.icon-input{
		margin-top:-4px !important;
		}
		
		.icon-clear{
		  padding-top:18px;
		  padding-left:0px;
		}
	</ui:style>
	<ui:with field="i18n" type="csi.client.gwt.i18n.CentrifugeConstantsLocator" />
	<boot:Tab heading="{i18n.get.appearanceTab_heading}" active="true">
		<g:LayoutPanel height="100%" width="100%">
			<g:layer top="0px" bottom="0px">
				<boot:FluidContainer addStyleNames="no-user-select {style.appearance-container}">
					<boot:FluidRow>
						<boot:Column size="6" addStyleNames="{style.scrollable}">
							<boot:Form type="HORIZONTAL" addStyleNames="node-appearance-form">
								<boot:Fieldset>
									<boot:ControlGroup>
										<boot:ControlLabel for="nameInput">
											<base:InlineLabel text="{i18n.get.name}" />
										</boot:ControlLabel>
										<boot:Controls>
											<boot:TextBox boot:id="nameInput" placeholder="{i18n.get.name}"
												ui:field="nameTextBox" />
										</boot:Controls>
									</boot:ControlGroup>
									<boot:ControlGroup>
										<boot:ControlLabel>
											<boot:CheckBox text="{i18n.get.label}"
												ui:field="labelCheckBox" addStyleNames="no-margin-input" />
										</boot:ControlLabel>
										<boot:Controls>
											<boot:RadioButton name="LabelMode" value="true"
												ui:field="labelFixed" addStyleNames="{style.inline-block}"
												text="{i18n.get.fixed}">
											</boot:RadioButton>
											<boot:RadioButton name="LabelMode" ui:field="labelDynamic"
												addStyleNames="{style.inline-block}" text="{i18n.get.field}">
											</boot:RadioButton>
											<combo:FieldDefComboBox ui:field="fieldList"
												addStyleNames="node-edit-field-list" />
											<boot:TextBox placeholder="{i18n.get.name}"
												ui:field="labelTextBox" />
										</boot:Controls>
									</boot:ControlGroup>
									<boot:ControlGroup>
										<boot:ControlLabel for="sizeByType">
											<boot:CheckBox text="{i18n.get.size}" ui:field="hideScaleCheckBox"
												addStyleNames="no-margin-input" value="true" />
										</boot:ControlLabel>
										<boot:Controls>
											<boot:RadioButton name="ScaleMode" value="true"
												ui:field="sizeFixed" addStyleNames="{style.inline-block}"
												text="{i18n.get.fixed}">
											</boot:RadioButton>
											<boot:RadioButton name="ScaleMode" ui:field="sizeDynamic"
												addStyleNames="{style.inline-block}" text="{i18n.get.metric}">
											</boot:RadioButton>
											<boot:RadioButton name="ScaleMode" ui:field="sizeComputed"
												addStyleNames="{style.inline-block}" text="{i18n.get.function}">
											</boot:RadioButton>
										</boot:Controls>
										<boot:Controls>
											<boot:TextBox placeholder="1.0" ui:field="staticSizeTextBox"
												alternateSize="MINI" />
											<boot:HelpInline ui:field="staticSizeHelp"
												text="{i18n.get.linkSettings_sizeHelp}" />
										</boot:Controls>
										<boot:Controls>
											<combo:FieldDefComboBox ui:field="sizeFunctionFdcb"
												addStyleNames="bootstrapComboBox" />
										</boot:Controls>
										<boot:Controls>
											<form:ComboBox ui:field="sizeFunctionComboBox"
												addStyleNames="bootstrapComboBox" />
										</boot:Controls>
										<boot:Controls>
											<local:SizingAttributeComboBox
												ui:field="sizeByAttribute">
											</local:SizingAttributeComboBox>
										</boot:Controls>
									</boot:ControlGroup>
									<boot:ControlGroup>
										<boot:ControlLabel for="opacityByType">
											<boot:CheckBox text="{i18n.get.transparencyShort}"
												ui:field="hideTransparencyCheckBox" addStyleNames="no-margin-input"
												value="true" />
										</boot:ControlLabel>
										<boot:Controls>
											<boot:RadioButton name="transparencyMode"
												ui:field="transparencyFixed" addStyleNames="{style.inline-block}"
												text="{i18n.get.fixed}" />
											<boot:RadioButton value="true" name="transparencyMode"
												ui:field="transparencyDynamic" addStyleNames="{style.inline-block}"
												text="{i18n.get.metric}" />
											<boot:RadioButton value="true" name="transparencyMode"
												ui:field="transparencyComputed" addStyleNames="{style.inline-block}"
												text="{i18n.get.function}" />
										</boot:Controls>
										<boot:Controls>
											<boot:TextBox placeholder="1.0"
												ui:field="staticTransparencyTextBox" alternateSize="MINI"
												value="100" />
											<boot:HelpInline ui:field="staticTransparencyHelp"
												text="{i18n.get.nodeSettings_transparencyHelpInfo}">
											</boot:HelpInline>
										</boot:Controls>
										<boot:Controls>
											<combo:FieldDefComboBox ui:field="transparencyFunctionFdcb"
												addStyleNames="bootstrapComboBox" />
										</boot:Controls>
										<boot:Controls>
											<form:ComboBox ui:field="transparencyFunctionComboBox"
												addStyleNames="bootstrapComboBox" />
										</boot:Controls>
										<boot:Controls>
											<local:SizingAttributeComboBox
												ui:field="transparencyByAttribute">
											</local:SizingAttributeComboBox>
										</boot:Controls>
									</boot:ControlGroup>
								</boot:Fieldset>
							</boot:Form>
							<boot:Form type="HORIZONTAL" addStyleNames="node-appearance-form">
								<boot:Fieldset>
									<boot:ControlGroup ui:field="typeControlGroup">
										<boot:ControlLabel>
											<base:InlineLabel text="{i18n.get.type}"
														   ui:field="typeCheckBox"
														   addStyleNames="no-margin-input" />
										</boot:ControlLabel>
										<boot:Controls>
											<boot:RadioButton name="TypeMode" value="true"
															  ui:field="typeFixed" addStyleNames="{style.inline-block}"
															  text="{i18n.get.fixed}" />
											<boot:RadioButton name="TypeMode" ui:field="typeDynamic"
															  addStyleNames="{style.inline-block}" text="{i18n.get.field}" />
											<combo:FieldDefComboBox ui:field="typeFieldList"
																	addStyleNames="node-edit-field-list" />
											<boot:TextBox placeholder="{i18n.get.name}"
														  ui:field="typeTextBox" />
										</boot:Controls>
									</boot:ControlGroup>
									<boot:ControlGroup>
										<boot:ControlLabel>
											<base:InlineLabel text="{i18n.get.nodeAppearance_identity}"
														   ui:field="identityCheckBox"
														   addStyleNames="no-margin-input" />
										</boot:ControlLabel>
										<boot:Controls>
											<boot:RadioButton name="identityMode"
															  ui:field="identityFixed" addStyleNames="{style.inline-block}"
															  text="{i18n.get.fixed}" />
											<boot:RadioButton value="true" name="identityMode"
															  ui:field="identityDynamic" addStyleNames="{style.inline-block}"
															  text="{i18n.get.field}" />
											<combo:FieldDefComboBox ui:field="identityFieldList"
																	addStyleNames="node-edit-field-list" />
											<boot:TextBox placeholder="{i18n.get.name}"
														  ui:field="identityTextBox" />
										</boot:Controls>
									</boot:ControlGroup>
								</boot:Fieldset>
							</boot:Form>
							<g:DisclosurePanel visible="false" ui:field="advancedDisclosurePanel"
								width="323px">
								<g:header />
							</g:DisclosurePanel>
						</boot:Column>
						<boot:Column size="6">
							<boot:Form type="HORIZONTAL" addStyleNames="node-appearance-form">
								<boot:Fieldset>
									<boot:ControlGroup>
										<boot:ControlLabel>
											<boot:CheckBox value="true"
												text="{i18n.get.nodeAppearance_icon}" ui:field="iconCheckBox"
												addStyleNames="no-margin-input" />
										</boot:ControlLabel>
										<boot:Controls>
											<boot:RadioButton name="TypeMode" value="true"
												ui:field="iconFixed" addStyleNames="{style.inline-block}"
												text="{i18n.get.fixed}" />
											<boot:RadioButton name="TypeMode" ui:field="iconDynamic"
												addStyleNames="{style.inline-block}" text="{i18n.get.field}" />
											<g:VerticalPanel ui:field="iconPanel">
											<g:HorizontalPanel>
												<g:SimplePanel addStyleNames="{style.preview}">
													<g:Image ui:field="imagePreview" addStyleNames="{style.border}{style.preview}" />
												</g:SimplePanel>
												<buttons:Button type="LINK" size="MINI"
                                                    ui:field="clearImage" addStyleNames="{style.icon-clear}" text="{i18n.get.clear}" >
                                                </buttons:Button>
                                         </g:HorizontalPanel>
												<g:SimplePanel ui:field="uploadContainer" />
											</g:VerticalPanel>
											<combo:FieldDefComboBox ui:field="iconFieldList"
												addStyleNames="node-edit-field-list" />
										</boot:Controls>
									</boot:ControlGroup>
									<boot:ControlGroup>
										<boot:ControlLabel for="shapeInput">
											<boot:CheckBox text="{i18n.get.nodeAppearance_shape}"
												ui:field="hideShapeCheckBox" addStyleNames="no-margin-input"
												value="true" />
										</boot:ControlLabel>
										<boot:Controls>
											<g:HTMLPanel ui:field="shapePanel" addStyleNames="node-edit-shape-panel" />

										</boot:Controls>
                                        
									</boot:ControlGroup>
									<boot:ControlGroup>
									    <boot:ControlLabel for="color">
                                        <boot:CheckBox text="{i18n.get.nodeAppearance_color}" ui:field="colorCheckBox"
                                            addStyleNames="no-margin-input" value="true" />
                                        </boot:ControlLabel>
                                        <boot:Controls>
                                            <boot:PrependButton>
                                                <boot:Button icon="TINT" ui:field="colorButton"
                                                    addStyleNames="{style.colorButton}" />
                                                <boot:TextBox boot:id="color" placeholder="#123456"
                                                    ui:field="colorTextBox" alternateSize="SMALL" />
                                            </boot:PrependButton>
                                            <gxt:ColorPalette ui:field="colorPalette"
                                                addStyleNames="node-edit-color-pallette" />
                                        </boot:Controls>
									</boot:ControlGroup>
									<boot:ControlGroup>
										<boot:ControlLabel>
											<g:Label addStyleNames="{style.preview-label}"
												text="{i18n.get.nodeAppearance_preview}">
											</g:Label>
										</boot:ControlLabel>
										<boot:Controls>
											<g:HTMLPanel ui:field="previewImagePanel">
											</g:HTMLPanel>
										</boot:Controls>
									</boot:ControlGroup>
								</boot:Fieldset>
							</boot:Form>
						</boot:Column>
					</boot:FluidRow>
				</boot:FluidContainer>
			</g:layer>
		</g:LayoutPanel>
	</boot:Tab>
</ui:UiBinder>