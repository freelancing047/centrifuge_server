<?xml version="1.0" encoding="UTF-8"?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-. --><wsdl:definitions xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:als="http://oculusinfo.com/ncompass/als/3.0" targetNamespace="http://oculusinfo.com/ncompass/als/3.0">
	
	<wsdl:types>
		
		<xs:schema elementFormDefault="qualified" targetNamespace="http://oculusinfo.com/ncompass/als/3.0">
			
			<xs:include schemaLocation="https://als.bridge-ic.net:443/als-3.1.0/als?xsd=1"></xs:include>
			<!--xs:include schemaLocation="als_process_extensions_3.1.0.xsd-->
			
			<!-- The base object for all the filters -->
			<xs:complexType name="BaseFilter" abstract="true">
				<xs:annotation><xs:documentation>The base filter that the other filters extend.</xs:documentation></xs:annotation>
				<xs:sequence></xs:sequence>
			</xs:complexType>
			
			<!-- Filters results to a time range -->
			<xs:complexType name="TimeFilter">
				<xs:annotation><xs:documentation>A time filter denotes a range of time.  This is used to narrow an ALE query to ALEs that occurred within the specified range.</xs:documentation></xs:annotation>
				<xs:complexContent>
					<xs:extension base="als:BaseFilter">
						<xs:sequence>
							<xs:element name="startTime" type="xs:dateTime">
								<xs:annotation><xs:documentation>The starting time for the filter's time range.  This time is included in the filter (if an ALE occurs at this time, it will be included in the result set).</xs:documentation></xs:annotation>
							</xs:element>
							<xs:element name="endTime" type="xs:dateTime">
								<xs:annotation><xs:documentation>The ending time for the filter's time range.  This time is included in the filter (if an ALE occurs at this time, it will be included in the result set).</xs:documentation></xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<!-- Filter results by originating service -->
			<xs:complexType name="OriginatingServiceFilter">
				<xs:annotation><xs:documentation>An OriginatingServiceFilter denotes a particular ALE generating application or system.  This filter will narrow a query to include ALEs that were generated by a particular application or system (for example, ALEs generated by nSpace or tagConnect.</xs:documentation></xs:annotation>
				<xs:complexContent>
					<xs:extension base="als:BaseFilter">
						<xs:sequence>
							<xs:element name="originatingServiceURI" type="xs:string">
								<xs:annotation>
									<xs:appinfo>
										<modify ver="3.0.0">Changed from xs:anyURI to xs:string to fix URI compatability issue between Axis and other SOAP stacks.</modify>
									</xs:appinfo>
									<xs:documentation>The URI identifying the system of interest (the value in the OriginatingSystem element in the AnalysisLogEventMessageType)</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<!-- Filter results by a particular user -->
			<xs:complexType name="UserFilter">
				<xs:annotation><xs:documentation>A UserFilter denotes a particular user.  This filter will narrow a query to ALEs generated by a particular individual.</xs:documentation></xs:annotation>
				<xs:complexContent>
					<xs:extension base="als:BaseFilter">
						<xs:sequence>
							<xs:element name="user" type="xs:string"></xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<!-- Filter results by a particular event id -->
			<xs:complexType name="IDFilter">
				<xs:annotation><xs:documentation>An IDFilter denotes a particular event identifier.  This filter will narrow a query to the single ALE with the given ID.</xs:documentation></xs:annotation>
				<xs:complexContent>
					<xs:extension base="als:BaseFilter">
						<xs:sequence>
							<xs:element name="id" type="xs:string"></xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:complexType name="RelatedIDFilter">
				<xs:annotation><xs:documentation>A RelatedIDFilter denotes a ALE identifier.  This filter will narrow a query to ALEs that have the relatedTo field set to the provided ID in the filter.</xs:documentation></xs:annotation>
				<xs:complexContent>
					<xs:extension base="als:BaseFilter">
						<xs:sequence>
							<xs:element name="relatedId" type="xs:string"></xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:complexType name="SessionFilter">
				<xs:annotation><xs:documentation>A SessionFilter denotes a ALE SessionID.  This filter will narrow a query to ALEs that have this session id.</xs:documentation></xs:annotation>
				<xs:complexContent>
					<xs:extension base="als:BaseFilter">
						<xs:sequence>
							<xs:element name="sessionId" type="xs:string"></xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:complexType name="EventSubTypeFilter">
				<xs:annotation><xs:documentation>A subtype filter denotes a subtype qualified name.  This filter will narrow a query to ALEs that have the EventSubType field set to this value.</xs:documentation></xs:annotation>
				<xs:complexContent>
					<xs:extension base="als:BaseFilter">
						<xs:sequence>
							<xs:element name="subtype" type="xs:string">
								<xs:annotation>
									<xs:appinfo>
										<modify ver="3.0.0">Changed from xs:QName to xs:string to deal with the (de)serialization differences between various SOAP stacks.</modify>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<!-- Filter results by ALE type -->
			<xs:complexType name="EventTypeFilter">
				<xs:annotation><xs:documentation>A TypeFilter denotes a particular AnalysisLogEvent or set of AnalysisLogEvents.  This filter will narrow a query to ALEs with a particular type.</xs:documentation></xs:annotation>
				<xs:complexContent>
					<xs:extension base="als:BaseFilter">
						<xs:sequence>
							<xs:element name="type">
								<xs:annotation>
									<xs:appinfo><modify ver="3.0.0"></modify></xs:appinfo>
									<xs:documentation>Removed social networking events as separate types from the core events of Create, Assess and Modify.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="InformationProcessingEvent">
											<xs:annotation><xs:documentation>Filtering by InformationProcessingEvent will narrow the query to ALEs of the following kind : Search, Access, Assess, Retain, Annotate, Discard, Transmit, Create, Modify and Respond.</xs:documentation></xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="Search"></xs:enumeration>
										<xs:enumeration value="Access"></xs:enumeration>
										<xs:enumeration value="Assess"></xs:enumeration>
										<xs:enumeration value="Retain"></xs:enumeration>
										<xs:enumeration value="Annotate"></xs:enumeration>
										<xs:enumeration value="Discard"></xs:enumeration>
										<xs:enumeration value="Transmit"></xs:enumeration>
										<xs:enumeration value="Create"></xs:enumeration>
										<xs:enumeration value="Modify"></xs:enumeration>
										<xs:enumeration value="Respond"></xs:enumeration>
										<xs:enumeration value="Focus"></xs:enumeration>
										
										<xs:enumeration value="WorkstationEvent">
											<xs:annotation><xs:documentation>Filtering by WorkstationEvent will narrow the query to ALEs of the following kinds: StartApplication.</xs:documentation></xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="StartApplication"></xs:enumeration>
										
										<xs:enumeration value="NetworkEnvironmentEvent">
											<xs:annotation><xs:documentation>Filtering by NetworkEnvironmentEvent will narrow the query to ALEs of the following kinds: SessionEvent.</xs:documentation></xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="SessionEvent"></xs:enumeration>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:complexType name="EntityTypeFilter">
				<xs:annotation>
					<xs:appinfo>
						<revision>3.0.0</revision>
					</xs:appinfo>
					<xs:documentation>An entitytype filter denotes an entity type name.  This filter will narrow a query to ALEs that have an EntityType of this value.</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="als:BaseFilter">
						<xs:sequence>
							<xs:element name="type" type="xs:string"></xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:complexType name="EntitySubTypeFilter">
				<xs:annotation>
					<xs:appinfo>
						<revision>3.0.0</revision>
					</xs:appinfo>
					<xs:documentation>An entity subtype filter denotes a subtype qualified name.  This filter will narrow a query to ALEs that have an EntitySubType of this value.</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="als:BaseFilter">
						<xs:sequence>
							<xs:element name="subtype" type="xs:string"></xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:element name="FilteredQueryRequest">
				<xs:annotation><xs:documentation>
					A request to query the ALS for a set of ALEs that match the provided filters.
					The FilteredQueryRequest  contains a list of filters.  There are 4 different kinds of filters available (see above).
					If more than one filter of the same kind are present, the query will treat them as being OR'ed together.  Different
					filters are AND'ed.
					
					For example, if you had:
					UserFilter - Jim
					UserFilter - Bob
					TimeFilter June 10-2007 12:00AM -&gt; June 11-2007 11:59PM
					
					Then the query would return any ALE that occured from June 10th to June 11th AND was initiated by Jim OR Bob.
					
					(user1 OR user2 OR user3) AND (type1 OR type2) AND (time1)
					
				</xs:documentation></xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="timeFilter" type="als:TimeFilter">
							<xs:annotation><xs:documentation>The only required filter, the time filter determines the time range that ALEs must have been published in.</xs:documentation></xs:annotation>
						</xs:element>
						<xs:element name="filter" type="als:BaseFilter" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation><xs:documentation>A set of filters that further trims down the result set.  See the documentation for how these filters operate.</xs:documentation></xs:annotation>
						</xs:element>
						<xs:element name="startIndex" type="xs:long">
							<xs:annotation><xs:documentation>The index into the total result set that results should be returned from.  This is used to page through the result set, returning it in managable sets.</xs:documentation></xs:annotation>
						</xs:element>
						<xs:element name="maxResults" type="xs:long">
							<xs:annotation><xs:documentation>The maximum number of results to return.  Note that the ALS may return a smaller number of results than requested, as it will have a maximum result set size internally.</xs:documentation></xs:annotation>
						</xs:element>
						<xs:element name="resultOrdering" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Allows for the client to request a specific type of ordering of the results.  This implementation only allows for sorting by a single element, in ascending or descending order.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="orderByElement" type="als:SortableBy">
										<xs:annotation>
											<xs:documentation>
												The element to sort the results by.
											</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="orderDirection" type="als:SortOrder">
										<xs:annotation>
											<xs:documentation>
												The order to sort by.
											</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			
			<xs:element name="FilteredQueryResponse">
				<xs:annotation><xs:documentation>The response to a FilteredQueryRequest.  This object contains a subset of ALEs that matched the query, as well as the total number of results in the set.</xs:documentation></xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="als:ALEMessage" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation><xs:documentation>A subset of ALEs that matched the query.</xs:documentation></xs:annotation>
						</xs:element>
						<xs:element name="resultIndex" type="xs:long">
							<xs:annotation><xs:documentation>The index into the result set from where the returned subset was fetched.  It will usually match startIndex in the FilteredQueryRequest, but occasionally it might be different.</xs:documentation></xs:annotation>
						</xs:element>
						<xs:element name="totalResults" type="xs:long" minOccurs="0">
							<xs:annotation>
								<xs:appinfo>
									<modify ver="3.0.0">Made optional</modify>
								</xs:appinfo>
								<xs:documentation>The total number of results from the query. (Optional, if the backend database supports this.)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="hasMoreResults" type="xs:boolean">
							<xs:annotation>
								<xs:appinfo>
									<revision>3.0.0</revision>
								</xs:appinfo>
								<xs:documentation>A flag that indicates if there are more results in the set after this subset.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			
			<!-- Faults -->
			<xs:element name="StartIndexOutOfBoundsFault">
				<xs:annotation><xs:documentation>This fault occurs if a query is made with a starting index that is larger than the total number of results from the query.</xs:documentation></xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="startIndex" type="xs:long">
							<xs:annotation><xs:documentation>The index that was provided that was out of bounds in the result set.</xs:documentation></xs:annotation>
						</xs:element>
						<xs:element name="totalResults" type="xs:long">
							<xs:annotation><xs:documentation>The total number of results from the query.</xs:documentation></xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			
			
		</xs:schema>
	</wsdl:types>
	
	<wsdl:message name="publishALEMessage">
		<wsdl:documentation>This message contains an ALE for storage in the ALS.  It is used as input in the publishALE operation.</wsdl:documentation>
		<wsdl:part name="body" element="als:ALEMessage">
			<wsdl:documentation>A single ALE, to be stored in the ALS.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	
	<wsdl:message name="FilteredQueryRequestMessage">
		<wsdl:documentation>This message contains a FilteredQueryRequest element that defines the query to execute against the database.</wsdl:documentation>
		<wsdl:part name="body" element="als:FilteredQueryRequest"></wsdl:part>
	</wsdl:message>
	
	<wsdl:message name="FilteredQueryResponseMessage">
		<wsdl:documentation>This message contains a FilteredQueryResponse element that contains the results of a query executed against the database.</wsdl:documentation>
		<wsdl:part name="body" element="als:FilteredQueryResponse"></wsdl:part>
	</wsdl:message>
	
	<wsdl:message name="StartIndexOutOfBoundsFaultMsg">
		<wsdl:documentation>The message contains fault information if a result subset was requested that was out of range of the total result set size.</wsdl:documentation>
		<wsdl:part name="fault" element="als:StartIndexOutOfBoundsFault"></wsdl:part>
	</wsdl:message>
	
	<wsdl:portType name="ALSInterface">
		<wsdl:documentation>The interface definition for the ALS.  It contains a method for storing ALEs, and a method for performing parameterized queries via the FilteredQueryRequest type.</wsdl:documentation>
		
		<wsdl:operation name="publishALE">
			<wsdl:documentation>This operation takes the ALE in the input, and stores it for future retrieval.</wsdl:documentation>
			<wsdl:input message="als:publishALEMessage"></wsdl:input>
		</wsdl:operation>
		
		<wsdl:operation name="ALSQuery">
			<wsdl:documentation>This operation takes a parameterized query, executes it against the backed storage mechanism, and returns a subset of the results.</wsdl:documentation>
			<wsdl:input message="als:FilteredQueryRequestMessage"></wsdl:input>
			<wsdl:output message="als:FilteredQueryResponseMessage"></wsdl:output>
			<wsdl:fault name="StartIndexOutOfBounds" message="als:StartIndexOutOfBoundsFaultMsg"></wsdl:fault>
		</wsdl:operation>
	</wsdl:portType>
	
	<wsdl:binding name="ALSBinding" type="als:ALSInterface">
		<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"></soap:binding>
		
		<wsdl:operation name="publishALE">
			<soap:operation soapAction="http://oculusinfo.com/ncompass/als/3.0/publishALE"></soap:operation>
			<wsdl:input>
				<soap:body use="literal"></soap:body>
			</wsdl:input>
		</wsdl:operation>
		
		<wsdl:operation name="ALSQuery">
			<soap:operation soapAction="http://oculusinfo.com/ncompass/als/3.0/ALSQuery"></soap:operation>
			<wsdl:input>
				<soap:body use="literal"></soap:body>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"></soap:body>
			</wsdl:output>
			<wsdl:fault name="StartIndexOutOfBounds">
				<soap:fault name="StartIndexOutOfBounds" use="literal"></soap:fault>
			</wsdl:fault>
		</wsdl:operation>
		
	</wsdl:binding>

	<wsdl:service name="ALSService">
		<wsdl:port name="ALSPort" binding="als:ALSBinding">
			<soap:address location="https://als.bridge-ic.net:443/als-3.1.0/als"></soap:address>
		</wsdl:port>
	</wsdl:service>

</wsdl:definitions>