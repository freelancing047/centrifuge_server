<?xml version="1.0" encoding="UTF-8"?>
<!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-. -->
<!-- edited with XMLSpy v2007 rel. 3 sp1 (http://www.altova.com) by Jeff Phelps (McDonald Bradley) -->
<!-- Created by McDonald Bradley, Inc. for the Defense Intelligence Agency -->
<!-- Author: Jeff Phelps (McDonald Bradley) -->
<definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:authSrv="http://dias.security.service.dodiis.ic.gov/v2.1/authservice/" xmlns:dias="urn:dias" targetNamespace="urn:dias">
	<!-- <xs:import namespace="http://dias.security.service.dodiis.ic.gov/v2.1/authservice/" schemaLocation="diasAttrib.xsd"/> -->
	<types>
		<xs:schema xmlns="urn:dias" targetNamespace="urn:dias">
			<xs:import namespace="http://dias.security.service.dodiis.ic.gov/v2.1/authservice/" schemaLocation="https://ams.bridge-ic.net:443/bridge-DIAS-1.0.0/dias?xsd=1"/>
			<xs:element name="error" type="authSrv:ErrorType">
				<xs:annotation>
					<xs:documentation>SOAP fault error wrapper</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:schema>
	</types>
	
	<message name="getUserInfoAttributesRequest">
		<part name="getUserInfoAttributesRequest" element="authSrv:getUserInfoAttributesRequest"/>	
	</message>
	<message name="getUserInfoAttributesResponse">
		<part name="getUserInfoAttributesResponse" element="authSrv:getUserInfoAttributesResponse"/>	
	</message>
	<message name="getUserOrgRequest">
		<part name="getUserOrgRequest" element="authSrv:getUserOrgRequest"/>
	</message>
	<message name="getAllUserGroupsRequest">
		<part name="getAllUserGroupsRequest" element="authSrv:getAllUserGroupsRequest"/>
	</message> 
	<message name="getUserFormalAccessRequest">
		<part name="getUserFormalAccessRequest" element="authSrv:getUserFormalAccessRequest"/>
	</message> 
	<message name="getUserCitizenshipRequest">
		<part name="getUserCitizenshipRequest" element="authSrv:getUserCitizenshipRequest"/>
	</message>
	<message name="getUserAffiliationRequest">
		<part name="getUserAffiliationRequest" element="authSrv:getUserAffiliationRequest"/>
	</message>  
	<message name="getUserClearanceRequest">
		<part name="getUserClearanceRequest" element="authSrv:getUserClearanceRequest"/>
	</message>  
	<message name="getUserSecurityAttributesRequest">
		<part name="getUserSecurityAttributesRequest" element="authSrv:getUserSecurityAttributesRequest"/>
	</message>  
	<message name="getSecurityAttributesAndGroupsResponse">
		<part name="getSecurityAttributesAndGroupsResponse" element="authSrv:getSecurityAttributesAndGroupsResponse"/>
	</message>
	<message name="getAllGroupsRequest"/>
	<message name="getAllGroupsResponse">
		<part name="getAllGroupsResponse" element="authSrv:getAllGroupsResponse"/>
	</message>
	<message name="getAllUserGroupsResponse">
		<part name="getAllUserGroupsResponse" element="authSrv:getAllUserGroupsResponse"/>
	</message>
	<message name="isMemberOfRequest">
		<part name="isMemberOfRequest" element="authSrv:isMemberOfRequest"/>
	</message>
	<message name="isMemberOfResponse">
		<part name="isMemberOfResponse" element="authSrv:isMemberOfResponse"/>
	</message>
	<message name="isMemberOfByDNRequest">
		<part name="isMemberOfByDNRequest" element="authSrv:isMemberOfByDNRequest"/>
	</message>
	<message name="getGroupDNRequest">
		<part name="getGroupDNRequest" element="authSrv:getGroupDNRequest"/>
	</message>
	<message name="getGroupDNResponse">
		<part name="getGroupDNResponse" element="authSrv:getGroupDNResponse"/>
	</message>
	<message name="getGroupMembersByDNRequest">
		<part name="getGroupMembersByDNRequest" element="authSrv:getGroupMembersByDNRequest"/>
	</message>
	<message name="getGroupMembersRequest">
		<part name="getGroupMembersRequest" element="authSrv:getGroupMembersRequest"/>
	</message>
	<message name="getGroupMembersResponse">
		<part name="getGroupMembersResponse" element="authSrv:getGroupMembersResponse"/>
	</message>
	<message name="getOrganizationResponse">
		<part name="getOrganizationResponse" element="authSrv:getOrganizationResponse"/>
	</message>
	<message name="getFormalAccessResponse">
		<part name="getFormalAccessResponse" element="authSrv:getFormalAccessResponse"/>
	</message>
	<message name="getCitizenshipResponse">
		<part name="getCitizenshipResponse" element="authSrv:getCitizenshipResponse"/>
	</message>
	<message name="getAffiliationResponse">
		<part name="getAffiliationResponse" element="authSrv:getAffiliationResponse"/>
	</message>
	<message name="getGroupsRequest">
		<part name="getGroupsRequest" element="authSrv:getUserGroupsRequest"/>
	</message>
	<message name="getUserSecurityAttributesAndGroupsRequest">
		<part name="getUserSecurityAttributesAndGroupsRequest" element="authSrv:getUserSecurityAttributesAndGroupsRequest"/>
	</message>
	<message name="getGroupsResponse">
		<part name="getGroupsResponse" element="authSrv:getUserGroupsResponse"/>
	</message>
	<message name="getClearanceResponse">
		<part name="getClearanceResponse" element="authSrv:getClearanceResponse"/>
	</message>
	<message name="getSecurityAttributesResponse">
		<part name="getSecurityAttributesResponse" element="authSrv:getSecurityAttributesResponse"/>
	</message>
	<message name="error">
		<part name="detail" element="dias:error"/>
	</message>
	<portType name="DIASMessageReceiver">
		<!-- Gets all groups withing in DIAS.  Groups are sorted by project. -->
		<operation name="getAllGroups">
			<input name="getAllGroupsRequest" message="dias:getAllGroupsRequest"/>
			<output name="getAllGroupsResponse" message="dias:getAllGroupsResponse"/>
			<fault name="getAllGroupsFault" message="dias:error"/>
		</operation>
		<!-- Gets all groups for a designated user.  The results aer sorted by project. -->		 
		<operation name="getAllUserGroups">
			<input name="getAllUserGroupsRequest" message="dias:getAllUserGroupsRequest"/>
			<output name="getAllUserGroupsResponse" message="dias:getAllUserGroupsResponse"/>
			<fault name="getAllUserGroupsFault" message="dias:error"/>
		</operation>		
		<!-- Determines if a user is a member of a group or not.  -->
		<operation name="isMemberOf">
			<input name="isMemberOfRequest" message="dias:isMemberOfRequest"/>
			<output name="isMemberOfResponse" message="dias:isMemberOfResponse"/>
			<fault name="isMemberOfFault" message="dias:error"/>
		</operation>
		<!-- Determine if a user is a member of a group using the groups DN instead of project name and group name.-->
		<operation name="isMemberOfByDN">
			<input name="isMemberOfByDNRequest" message="dias:isMemberOfByDNRequest"/>
			<output name="isMemberOfByDNResponse" message="dias:isMemberOfResponse"/>
			<fault name="isMemberOfByDNFault" message="dias:error"/>
		</operation>
		<!-- Return a group's DN when givien a project name and group name. -->
		<operation name="getGroupDN">
			<input name="getGroupDNRequest" message="dias:getGroupDNRequest"/>
			<output name="getGroupDNResponse" message="dias:getGroupDNResponse"/>
			<fault name="getGroupDNFault" message="dias:error"/>
		</operation>
		<!-- Get a list of DNs that are members of a group.  The group is designated by a DN. -->
		<operation name="getGroupMembersByDN">
			<input name="getGroupMembersByDNRequest" message="dias:getGroupMembersByDNRequest"/>
			<output name="getGroupMembersByDNResponse" message="dias:getGroupMembersResponse"/>
			<fault name="getGroupMembersByDNFault" message="dias:error"/>
		</operation>
		<!-- Pass in a group name and project name and get a list of DNs that are members of that group. -->
		<operation name="getGroupMembers">
			<input name="getGroupMembersRequest" message="dias:getGroupMembersRequest"/>
			<output name="getGroupMembersResponse" message="dias:getGroupMembersResponse"/>
			<fault name="getGroupMembersFault" message="dias:error"/>
		</operation>
		<!-- Returns a user's organization. -->
		<operation name="getUserOrganization">
			<input name="getUserOrgainizationRequest" message="dias:getUserOrgRequest"/>
			<output name="getUserOrganizationResponse" message="dias:getOrganizationResponse"/>
			<fault name="getOrgFault" message="dias:error"/>
		</operation>
		<!-- Returns a user's formal access values. --> 
		<operation name="getUserFormalAccess">
			<input name="getUserFormalAccessRequest" message="dias:getUserFormalAccessRequest"/>
			<output name="getUserFormalAccessResponse" message="dias:getFormalAccessResponse"/>
			<fault name="getFormalAccessFault" message="dias:error"/>
		</operation>
		<!-- Returns a user's citizenship. -->  
		<operation name="getUserCitizenship">
			<input name="getUserCitizenshipRequest" message="dias:getUserCitizenshipRequest"/>
			<output name="getUserCitzenshipResponse" message="dias:getCitizenshipResponse"/>
			<fault name="getCitizenshipFault" message="dias:error"/>
		</operation>
		<!-- Returns a user's affiliation --> 
		<operation name="getUserAffiliation">
			<input name="getUserAffiliationRequest" message="dias:getUserAffiliationRequest"/>
			<output name="getUserAffiliationResponse" message="dias:getAffiliationResponse"/>
			<fault name="getAffiliationFault" message="dias:error"/>
		</operation>
		<!-- Returns the list of groups a user belongs to for a project. -->
		<operation name="getUserGroups">
			<input name="getGroupsRequest" message="dias:getGroupsRequest"/>
			<output name="getGroupsResponse" message="dias:getGroupsResponse"/>
			<fault name="getGroupsFault" message="dias:error"/>
		</operation>
		<!-- Returns a user's clearance -->  
		<operation name="getUserClearance">
			<input name="getUserClearanceRequest" message="dias:getUserClearanceRequest"/>
			<output name="getUserClearanceResponse" message="dias:getClearanceResponse"/>
			<fault name="getClearanceFault" message="dias:error"/>
		</operation>
		<!-- Returns a user's clearance, citizenship, and formal access --> 
		<operation name="getUserSecurityAttributes">
			<input name="getUserSecurityAttributesRequest" message="dias:getUserSecurityAttributesRequest"/>
			<output name="getUserSecurityAttributesResponse" message="dias:getSecurityAttributesResponse"/>
			<fault name="getSecurityAttributesFault" message="dias:error"/>
		</operation>
		<!-- Returns a user's clearance, citizenship, formal access, and group membership --> 
		<operation name="getUserSecurityAttributesAndGroups">
			<input name="getUserSecurityAttributesAndGroupsRequest" message="dias:getUserSecurityAttributesAndGroupsRequest"/>
			<output name="getUserSecurityAttributesAndGroupsResponse" message="dias:getSecurityAttributesAndGroupsResponse"/>
			<fault name="getUserSecurityAttributesAndGroupsFault" message="dias:error"/>
		</operation>
		<!-- Returns a user's white page attributes.  First Name, Last Name, uid, phone number, IC email, SIPRNet email, and NIPRNet email. --> 
		<operation name="getUserInfoAttributes">
			<input name="getUseInfoAttributesRequest" message="dias:getUserInfoAttributesRequest"/>
			<output name="getUserInfoAttributesResponse" message="dias:getUserInfoAttributesResponse"/>
			<fault name="getUserInfoAttributesFault" message="dias:error"/>
		</operation>
	</portType>
	<binding name="diasBinding" type="dias:DIASMessageReceiver">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<!-- Used to  all existing gorups -->
		<operation name="getAllGroups">
			<soap:operation soapAction="getAllGroups"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getAllGroupsFault">
				<soap:fault name="getAllGroupsFault" use="literal"/>
			</fault>
		</operation>
				<!-- Used to get all a user's groups -->
				 
		<operation name="getAllUserGroups">
			<soap:operation soapAction="getAllUserGroups1"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getAllUserGroupsFault">
				<soap:fault name="getAllUserGroupsFault" use="literal"/>
			</fault>
		</operation>
		
		<!-- Used to determine if a user is the member of a project/group -->
		<operation name="isMemberOf">
			<soap:operation soapAction="isMemberOf"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="isMemberOfFault">
				<soap:fault name="isMemberOfFault" use="literal"/>
			</fault>
		</operation>
		<!-- Determines if a user is a member of a group using the groups DN -->
		<operation name="isMemberOfByDN">
			<soap:operation soapAction="isMemberOfByDN"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="isMemberOfByDNFault">
				<soap:fault name="isMemberOfByDNFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns a groups DN when given it's project and group name -->
		<operation name="getGroupDN">
			<soap:operation soapAction="getGroupDN"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getGroupDNFault">
				<soap:fault name="getGroupDNFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns a list of the members of a group when given the groups DN -->
		<operation name="getGroupMembersByDN">
			<soap:operation soapAction="getGroupMembersByDN"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getGroupMembersByDNFault">
				<soap:fault name="getGroupMembersByDNFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns a list of the members of a group when given the group and project names -->
		<operation name="getGroupMembers">
			<soap:operation soapAction="getGroupMembers"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getGroupMembersFault">
				<soap:fault name="getGroupMembersFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns the user's formal access attribute values --> 
		<operation name="getUserFormalAccess">
			<soap:operation soapAction="getUserFormalAccess"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getFormalAccessFault">
				<soap:fault name="getFormalAccessFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns the user's organization attribute value -->
		<operation name="getUserOrganization">
			<soap:operation soapAction="getUserOrganization"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getOrgFault">
				<soap:fault name="getOrgFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns the user's citizenship attribute value -->  
		<operation name="getUserCitizenship">
			<soap:operation soapAction="getUserCitizenship"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getCitizenshipFault">
				<soap:fault name="getCitizenshipFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns the user's affiliation --> 
		<operation name="getUserAffiliation">
			<soap:operation soapAction="getUserAffiliation"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getAffiliationFault">
				<soap:fault name="getAffiliationFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns the groups the user belongs to for a project -->
		<operation name="getUserGroups">
			<soap:operation soapAction="getUserGroups"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getGroupsFault">
				<soap:fault name="getGroupsFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns the user's clearance --> 
		<operation name="getUserClearance">
			<soap:operation soapAction="getUserClearance"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getClearanceFault">
				<soap:fault name="getClearanceFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns the user's security attributes.  Clearance, Formal Access, Citizenship, NonICMarking, and Dissemination Controls (the later two may be depricated)--> 
		<operation name="getUserSecurityAttributes">
			<soap:operation soapAction="getUserSecurityAttributes"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getSecurityAttributesFault">
				<soap:fault name="getSecurityAttributesFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns hte user's clearance, citizienship, formal access, and groups for the specified project -->
		<operation name="getUserSecurityAttributesAndGroups">
			<soap:operation soapAction="getUserSecurityAttributresAndGroups"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getUserSecurityAttributesAndGroupsFault">
				<soap:fault name="getUserSecurityAttributesAndGroupsFault" use="literal"/>
			</fault>
		</operation>
		<!-- Returns a user's white page attributes.  First Name, Last Name, uid, phone number, IC email, SIPRNet email, and NIPRNet email. -->
		<operation name="getUserInfoAttributes">
			<soap:operation soapAction="getUserInfoAttributes"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
			<fault name="getUserInfoAttributesFault">
				<soap:fault name="getUserInfoAttributesFault" use="literal"/>
			</fault>
		</operation>
	</binding>
	<service name="DIASMessageReceiverService">
		<port name="DIAS" binding="dias:diasBinding">
			<soap:address location="https://ams.bridge-ic.net:443/bridge-DIAS-1.0.0/dias"/>
		</port>
	</service>
</definitions>