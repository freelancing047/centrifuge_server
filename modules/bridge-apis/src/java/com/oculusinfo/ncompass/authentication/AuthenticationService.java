package com.oculusinfo.ncompass.authentication;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.4-hudson-208-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "AuthenticationService", targetNamespace = "http://oculusinfo.com/ncompass/authentication", wsdlLocation = "file:/META-INF/services/auth.wsdl")
public class AuthenticationService extends Service {
   private static final Logger LOG = LogManager.getLogger(com.oculusinfo.ncompass.authentication.AuthenticationService.class);

    private final static URL AUTHENTICATIONSERVICE_WSDL_LOCATION;

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = com.oculusinfo.ncompass.authentication.AuthenticationService.class.getResource(".");
            url = new URL(baseUrl, "file:/META-INF/services/auth.wsdl");
        } catch (MalformedURLException e) {
           LOG.warn("Failed to create URL for the wsdl Location: 'file:/META-INF/services/auth.wsdl', retrying as a local file");
           LOG.warn(e.getMessage());
        }
        AUTHENTICATIONSERVICE_WSDL_LOCATION = url;
    }

    public AuthenticationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AuthenticationService() {
        super(AUTHENTICATIONSERVICE_WSDL_LOCATION, new QName("http://oculusinfo.com/ncompass/authentication", "AuthenticationService"));
    }

    /**
     * 
     * @return
     *     returns AuthenticationInterface
     */
    @WebEndpoint(name = "AuthenticationPort")
    public AuthenticationInterface getAuthenticationPort() {
        return super.getPort(new QName("http://oculusinfo.com/ncompass/authentication", "AuthenticationPort"), AuthenticationInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthenticationInterface
     */
    @WebEndpoint(name = "AuthenticationPort")
    public AuthenticationInterface getAuthenticationPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://oculusinfo.com/ncompass/authentication", "AuthenticationPort"), AuthenticationInterface.class, features);
    }

}
